{
  "summary": {
    "overall_status": "FAILED",
    "pass_rate": 58.333333333333336,
    "total_checks": 4,
    "passed_checks": 1,
    "total_metrics": 12,
    "passed_metrics": 7,
    "total_errors": 0,
    "total_warnings": 63,
    "execution_time": 0.9723997116088867,
    "timestamp": 1755130437.135906
  },
  "quality_gates": [
    {
      "gate_name": "Code Structure",
      "passed": false,
      "metrics": [
        {
          "name": "Total Python Files",
          "value": 26,
          "threshold": 5,
          "passed": true,
          "description": "Number of Python source files",
          "severity": "medium"
        },
        {
          "name": "Average File Size",
          "value": 19483.653846153848,
          "threshold": 5000,
          "passed": false,
          "description": "Average file size in bytes",
          "severity": "medium"
        },
        {
          "name": "Max File Size",
          "value": 36033,
          "threshold": 20000,
          "passed": false,
          "description": "Maximum file size in bytes",
          "severity": "medium"
        },
        {
          "name": "Import Violations",
          "value": 0,
          "threshold": 5,
          "passed": true,
          "description": "Number of problematic imports",
          "severity": "high"
        },
        {
          "name": "Code Smells",
          "value": 32,
          "threshold": 10,
          "passed": false,
          "description": "Number of detected code smells",
          "severity": "medium"
        }
      ],
      "execution_time": 0.5095038414001465,
      "errors": [],
      "warnings": [
        "Large file detected: src/nimify/api.py (13653 bytes)",
        "Large file detected: src/nimify/core.py (14780 bytes)",
        "Large file detected: src/nimify/deployment.py (26816 bytes)",
        "Large file detected: src/nimify/error_handling.py (20100 bytes)",
        "Large file detected: src/nimify/fusion_engine.py (36033 bytes)",
        "Large file detected: src/nimify/global_deployment.py (34179 bytes)",
        "Large file detected: src/nimify/model_analyzer.py (15178 bytes)",
        "Large file detected: src/nimify/monitoring.py (20666 bytes)",
        "Large file detected: src/nimify/neural_processor.py (17871 bytes)",
        "Large file detected: src/nimify/olfactory_analyzer.py (32249 bytes)",
        "Large file detected: src/nimify/optimization.py (32426 bytes)",
        "Large file detected: src/nimify/performance.py (14561 bytes)",
        "Large file detected: src/nimify/performance_optimizer.py (30191 bytes)",
        "Large file detected: src/nimify/robust_api.py (21376 bytes)",
        "Large file detected: src/nimify/security.py (12747 bytes)",
        "Large file detected: src/nimify/validation.py (14336 bytes)",
        "Large file detected: src/nimify/circuit_breaker.py (13641 bytes)",
        "Large file detected: src/nimify/admin_api.py (20045 bytes)",
        "Large file detected: src/nimify/advanced_cli.py (15158 bytes)",
        "Large file detected: src/nimify/rate_limiter.py (20756 bytes)",
        "Large file detected: src/nimify/auto_scaler.py (28472 bytes)",
        "Large file detected: src/nimify/caching_system.py (31045 bytes)",
        "Long line in src/nimify/api.py:279 (125 chars)",
        "Long line in src/nimify/deployment.py:711 (122 chars)",
        "Deep nesting in function deploy_to_kubernetes in src/nimify/deployment.py (depth: 5)",
        "Deep nesting in function _classify_error in src/nimify/error_handling.py (depth: 9)",
        "Long line in src/nimify/fusion_engine.py:66 (126 chars)",
        "Long line in src/nimify/fusion_engine.py:355 (138 chars)",
        "Long line in src/nimify/fusion_engine.py:803 (122 chars)",
        "Long line in src/nimify/fusion_engine.py:844 (138 chars)",
        "Deep nesting in function _apply_fusion_strategy in src/nimify/fusion_engine.py (depth: 5)",
        "Long line in src/nimify/global_deployment.py:337 (132 chars)",
        "Long line in src/nimify/global_deployment.py:340 (121 chars)",
        "Long line in src/nimify/global_deployment.py:411 (126 chars)",
        "TODO/FIXME comment in src/nimify/global_deployment.py:233",
        "Deep nesting in function analyze_onnx_model in src/nimify/model_analyzer.py (depth: 5)",
        "Deep nesting in function analyze_tensorflow_model in src/nimify/model_analyzer.py (depth: 5)",
        "Long line in src/nimify/olfactory_analyzer.py:370 (126 chars)",
        "Long line in src/nimify/olfactory_analyzer.py:641 (121 chars)",
        "Deep nesting in function _classify_molecule_type in src/nimify/olfactory_analyzer.py (depth: 6)",
        "Deep nesting in function _aggregate_neural_responses in src/nimify/olfactory_analyzer.py (depth: 5)",
        "Long line in src/nimify/optimization.py:712 (124 chars)",
        "Long line in src/nimify/robust_api.py:466 (134 chars)",
        "Long line in src/nimify/validation.py:235 (134 chars)",
        "Deep nesting in function get_recommendations in src/nimify/admin_api.py (depth: 6)",
        "Deep nesting in function analyze in src/nimify/advanced_cli.py (depth: 6)",
        "Long line in src/nimify/rate_limiter.py:136 (128 chars)",
        "Long line in src/nimify/rate_limiter.py:268 (137 chars)",
        "Long line in src/nimify/auto_scaler.py:678 (122 chars)",
        "Long line in src/nimify/auto_scaler.py:684 (123 chars)",
        "Long line in src/nimify/caching_system.py:824 (124 chars)",
        "Long line in src/nimify/caching_system.py:900 (123 chars)",
        "Long line in src/nimify/caching_system.py:906 (127 chars)",
        "Long line in src/nimify/caching_system.py:908 (124 chars)"
      ],
      "recommendations": [
        "Consider breaking large files into smaller modules"
      ]
    },
    {
      "gate_name": "Documentation",
      "passed": true,
      "metrics": [
        {
          "name": "Function Documentation Coverage",
          "value": 81.42589118198875,
          "threshold": 70.0,
          "passed": true,
          "description": "Percentage of functions with docstrings",
          "severity": "medium"
        },
        {
          "name": "Class Documentation Coverage",
          "value": 98.46153846153847,
          "threshold": 80.0,
          "passed": true,
          "description": "Percentage of classes with docstrings",
          "severity": "medium"
        },
        {
          "name": "README Exists",
          "value": 1.0,
          "threshold": 1.0,
          "passed": true,
          "description": "Project has a README file",
          "severity": "high"
        }
      ],
      "execution_time": 0.1958141326904297,
      "errors": [],
      "warnings": [],
      "recommendations": []
    },
    {
      "gate_name": "Security",
      "passed": false,
      "metrics": [
        {
          "name": "Security Issues",
          "value": 9,
          "threshold": 0,
          "passed": false,
          "description": "Number of potential security issues",
          "severity": "critical"
        },
        {
          "name": "High-Risk Patterns",
          "value": 0,
          "threshold": 0,
          "passed": true,
          "description": "Number of high-risk security patterns",
          "severity": "critical"
        }
      ],
      "execution_time": 0.07979083061218262,
      "errors": [],
      "warnings": [
        "Use of random for security (use secrets module) in src/nimify/optimization.py:741",
        "Use of MD5 hash (weak) in src/nimify/performance.py:140",
        "Use of MD5 hash (weak) in src/nimify/performance_optimizer.py:683",
        "Hardcoded password reference in src/nimify/security.py:326",
        "Hardcoded secret reference in src/nimify/security.py:326",
        "Use of pickle.load/loads in src/nimify/caching_system.py:435",
        "Use of pickle.load/loads in src/nimify/caching_system.py:438",
        "Use of pickle.load/loads in src/nimify/caching_system.py:600",
        "Use of pickle.load/loads in src/nimify/caching_system.py:680"
      ],
      "recommendations": [
        "Review and remediate security issues before production deployment",
        "Consider using static security analysis tools like bandit"
      ]
    },
    {
      "gate_name": "Dependencies",
      "passed": false,
      "metrics": [
        {
          "name": "Dependency File Exists",
          "value": 1.0,
          "threshold": 1.0,
          "passed": true,
          "description": "Project has dependency specification",
          "severity": "high"
        },
        {
          "name": "Third-party Dependencies",
          "value": 40,
          "threshold": 20,
          "passed": false,
          "description": "Number of third-party dependencies",
          "severity": "medium"
        }
      ],
      "execution_time": 0.18585824966430664,
      "errors": [],
      "warnings": [],
      "recommendations": [
        "Consider reducing the number of dependencies"
      ]
    }
  ],
  "recommendations": [
    "Consider using static security analysis tools like bandit",
    "Consider breaking large files into smaller modules",
    "Review and remediate security issues before production deployment",
    "Consider reducing the number of dependencies"
  ],
  "metadata": {
    "source_directory": "src",
    "generated_at": "2025-08-14 00:13:57",
    "generator_version": "1.0.0"
  }
}