stages:
  - test
  - security
  - build
  - deploy

variables:
  DOCKER_IMAGE: $CI_REGISTRY_IMAGE/nimify-anything
  DOCKER_TAG: $CI_COMMIT_SHA

test:
  stage: test
  image: python:3.11
  script:
    - pip install -r requirements.txt
    - pip install pytest pytest-cov
    - python -m pytest tests/ -v --cov=src --cov-report=term
  coverage: '/TOTAL.*\s+(\d+%)$/'

security-scan:
  stage: security
  image: securecodewarrior/docker-action
  script:
    - echo "Running security scan"
    # Add security scanning commands

build:
  stage: build
  image: docker:20.10.16
  services:
    - docker:20.10.16-dind
  script:
    - docker build -f docker/Dockerfile -t $DOCKER_IMAGE:$DOCKER_TAG .
    - docker push $DOCKER_IMAGE:$DOCKER_TAG
  only:
    - main
    - develop

deploy-staging:
  stage: deploy
  image: bitnami/kubectl:latest
  script:
    - echo "Deploying to staging"
    # kubectl apply -k kubernetes/overlays/staging
  environment:
    name: staging
  only:
    - develop

deploy-production:
  stage: deploy
  image: bitnami/kubectl:latest
  script:
    - echo "Deploying to production"
    # kubectl apply -k kubernetes/overlays/production
  environment:
    name: production
  when: manual
  only:
    - main
