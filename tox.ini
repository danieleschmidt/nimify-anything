[tox]
envlist = py310,py311,py312,lint,security,docs
isolated_build = true
skip_missing_interpreters = true

[gh-actions]
python =
    3.10: py310
    3.11: py311
    3.12: py312

[testenv]
deps = 
    {[testenv:test]deps}
commands = 
    {[testenv:test]commands}

[testenv:test]
deps =
    pytest>=7.0.0
    pytest-cov>=4.0.0
    pytest-asyncio>=0.21.0
    pytest-mock>=3.10.0
    httpx>=0.24.0
    pytest-xdist>=3.0.0
commands =
    pytest {posargs} -n auto --cov=src --cov-report=term-missing --cov-report=xml --cov-report=html

[testenv:py310]
basepython = python3.10

[testenv:py311]
basepython = python3.11

[testenv:py312]
basepython = python3.12

[testenv:lint]
deps =
    black>=23.0.0
    ruff>=0.1.0
    mypy>=1.0.0
    types-PyYAML>=6.0.0
    types-click>=8.0.0
    types-setuptools>=65.0.0
commands =
    black --check --diff src tests
    ruff check src tests
    mypy src

[testenv:format]
deps =
    black>=23.0.0
    ruff>=0.1.0
commands =
    black src tests
    ruff check --fix src tests

[testenv:security]
deps =
    bandit>=1.7.0
    safety>=2.3.0
    detect-secrets>=1.4.0
commands =
    bandit -r src -f json -o bandit-report.json
    safety check --json --output safety-report.json
    detect-secrets scan --baseline .secrets.baseline .

[testenv:docs]
deps =
    sphinx>=5.0.0
    sphinx-rtd-theme>=1.2.0
    myst-parser>=0.18.0
commands =
    sphinx-build -W -b html docs docs/_build/html
    sphinx-build -W -b linkcheck docs docs/_build/linkcheck

[testenv:performance]
deps =
    {[testenv:test]deps}
    pytest-benchmark>=4.0.0
    memory-profiler>=0.60.0
commands =
    pytest tests/performance/ -v --benchmark-only --benchmark-sort=mean

[testenv:integration]
deps =
    {[testenv:test]deps}
    docker>=6.0.0
    testcontainers>=3.7.0
commands =
    pytest tests/integration/ -v --tb=short

[testenv:load]
deps =
    locust>=2.0.0
    requests>=2.28.0
commands =
    locust --headless --users 10 --spawn-rate 2 --run-time 30s --host http://localhost:8000

[testenv:build]
deps =
    build>=0.10.0
    twine>=4.0.0
commands =
    python -m build
    twine check dist/*

[testenv:clean]
deps =
skip_install = true
commands =
    python -c "import shutil; shutil.rmtree('dist', ignore_errors=True)"
    python -c "import shutil; shutil.rmtree('build', ignore_errors=True)"
    python -c "import shutil; shutil.rmtree('src/nimify_anything.egg-info', ignore_errors=True)"
    python -c "import shutil; shutil.rmtree('.tox', ignore_errors=True)"
    python -c "import shutil; shutil.rmtree('htmlcov', ignore_errors=True)"
    python -c "import os; [os.remove(f) for f in ['.coverage', 'coverage.xml', 'bandit-report.json', 'safety-report.json'] if os.path.exists(f)]"

[coverage:run]
source = src
branch = true
omit = 
    */tests/*
    */test_*
    */__pycache__/*
    */site-packages/*

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    raise AssertionError
    raise NotImplementedError
    if __name__ == .__main__.:
    if TYPE_CHECKING: